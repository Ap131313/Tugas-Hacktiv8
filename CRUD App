<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Daily Mood Tracker</title>
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600&display=swap" rel="stylesheet">
  <style>
    body {
      font-family: 'Inter', sans-serif;
      margin: 0;
      background: #f0f4f8;
    }
    .header {
      background: linear-gradient(to right, #2193b0, #6dd5ed);
      color: white;
      text-align: center;
      padding: 20px;
      border-radius: 0 0 12px 12px;
    }
    .tabs {
      display: flex;
      justify-content: center;
      margin: 20px 0;
    }
    .tab-button {
      background: #e0e0e0;
      border: none;
      padding: 10px 20px;
      margin: 0 5px;
      border-radius: 6px;
      cursor: pointer;
    }
    .tab-button.active {
      background: #2193b0;
      color: white;
    }
    .tab-content {
      display: none;
      max-width: 600px;
      margin: auto;
    }
    .tab-content.active {
      display: block;
    }
    .form-section, .history-section {
      background: white;
      padding: 20px;
      border-radius: 12px;
      box-shadow: 0 2px 8px rgba(0,0,0,0.05);
    }
    .history-section {
      max-height: 400px;
      overflow-y: auto;
    }
    .entry-box {
      background: #e3f2fd;
      padding: 10px;
      margin: 10px 0;
      border-radius: 8px;
      display: flex;
      justify-content: space-between;
      align-items: center;
      box-shadow: 0 1px 4px rgba(0,0,0,0.05);
    }
    .entry-buttons button {
      margin-left: 5px;
    }
    .input-row {
      display: flex;
      flex-direction: column;
      margin: 10px 0;
    }
    select, textarea, input[type=text] {
        padding: 12px;
        font-size: 16px;
        border-radius: 6px;
        border: 1px solid #ccc;
        width: 100%;
        box-sizing: border-box;
        }
        button {
        font-size: 16px;
        padding: 10px 16px;
        border-radius: 6px;
        border: none;
        cursor: pointer;
        }

    .center {
      text-align: center;
    }
    .feedback {
      text-align: center;
      margin-top: 10px;
      color: green;
      font-weight: 600;
    }
    @media (max-width: 600px) {
        .form-section, .history-section {
            padding: 15px;
        }
        .entry-box {
            flex-direction: column;
            align-items: flex-start;
        }
        .entry-buttons {
            margin-top: 10px;
            align-self: flex-end;
        }
        .tab-button {
            flex: 1;
            font-size: 14px;
        }
        }

  </style>
</head>
<body>
  <div class="header">
    <h1>Daily Mood Tracker</h1>
    <p>Welcome! How are you feeling today?</p>
  </div>
  <div class="tabs center">
    <button class="tab-button active" onclick="switchTab('log', event)">Log Mood</button>
    <button class="tab-button" onclick="switchTab('history', event)">Mood History</button>
  </div>

  <div id="log" class="tab-content active">
    <div class="form-section">
      <div class="input-row">
        <label for="mood">Mood</label>
        <select id="mood">
          <option>üòä Happy</option>
          <option>üòê Neutral</option>
          <option>üò¢ Sad</option>
          <option>üò† Angry</option>
          <option>üò∞ Anxious</option>
          <option>üò¥ Tired</option>
        </select>
      </div>
      <div class="input-row">
        <label for="note">Note</label>
        <textarea id="note" rows="3" placeholder="Optional note..."></textarea>
      </div>
      <div class="center">
        <button onclick="submitMood()">Submit Mood</button>
      </div>
      <div class="feedback" id="feedback"></div>
    </div>
  </div>

  <div id="history" class="tab-content">
    <div class="history-section" id="entries">
      <!-- Entries injected here -->
    </div>
  </div>

  <script>
    
    let moodEntries = JSON.parse(localStorage.getItem('moodEntries') || '[]');
    let editingIndex = null;

    function switchTab(tabId, event) {
      document.querySelectorAll('.tab-content').forEach(tab => tab.classList.remove('active'));
      document.querySelectorAll('.tab-button').forEach(btn => btn.classList.remove('active'));
      document.getElementById(tabId).classList.add('active');
      event.target.classList.add('active');
      if (tabId === 'history') renderEntries();
    }

    function showFeedback(message) {
      const feedback = document.getElementById('feedback');
      feedback.textContent = message;
      setTimeout(() => feedback.textContent = '', 2000);
    }

    function submitMood() {
      const mood = document.getElementById('mood').value;
      const note = document.getElementById('note').value;
      const timestamp = new Date().toLocaleString();

      if (!mood) return showFeedback("Please select a mood.");

      if (editingIndex !== null) {
        moodEntries[editingIndex] = { mood, note, timestamp };
        editingIndex = null;
        showFeedback("Mood updated!");
      } else {
        moodEntries.push({ mood, note, timestamp });
        showFeedback("Mood saved!");
      }

      localStorage.setItem('moodEntries', JSON.stringify(moodEntries));
      document.getElementById('mood').value = 'üòä Happy';
      document.getElementById('note').value = '';
      renderEntries();
    }

    function renderEntries() {
      const container = document.getElementById('entries');
      container.innerHTML = '';
      moodEntries.forEach((entry, i) => {
        const box = document.createElement('div');
        box.className = 'entry-box';

        const text = document.createElement('div');
        text.innerHTML = `<b>Entry ${i + 1}:</b> ${entry.mood}<br><i>Note:</i> ${entry.note || '-'}<br><small>${entry.timestamp}</small>`;

        const buttons = document.createElement('div');
        buttons.className = 'entry-buttons';

        const edit = document.createElement('button');
        edit.textContent = '‚úèÔ∏è';
        edit.onclick = () => {
          document.getElementById('mood').value = entry.mood;
          document.getElementById('note').value = entry.note;
          editingIndex = i;
          switchTab('log', { target: document.querySelector(".tab-button") });
        };

        const del = document.createElement('button');
        del.textContent = '‚ùå';
        del.onclick = () => {
        deleteIndex = i;
        confirmText.textContent = `Are you sure you want to delete Entry ${i + 1}?`;
        confirmModal.style.display = 'flex';
        document.body.style.overflow = 'hidden';  // disable scroll

        };



        buttons.appendChild(edit);
        buttons.appendChild(del);
        box.appendChild(text);
        box.appendChild(buttons);
        container.appendChild(box);
      });
    }

    renderEntries();

    confirmYes.onclick = () => {
    if (deleteIndex !== null) {
        moodEntries.splice(deleteIndex, 1);
        localStorage.setItem('moodEntries', JSON.stringify(moodEntries));
        renderEntries();
        deleteIndex = null;
    }
    confirmModal.style.display = 'none';
    document.body.style.overflow = '';
    };

    confirmNo.onclick = () => {
    confirmModal.style.display = 'none';
    document.body.style.overflow = '';
    deleteIndex = null;
    };

  </script>
  <div id="confirmModal" style="
  display:none; position:fixed; top:0; left:0; width:100%; height:100%; 
  background:rgba(0,0,0,0.5); justify-content:center; align-items:center; 
  z-index:9999; padding: 10px; box-sizing: border-box;">
  <div style="
    background:#fff; padding:20px; border-radius:8px; text-align:center; 
    width:100%; max-width:320px; box-shadow: 0 2px 8px rgba(0,0,0,0.2);">
    <p id="confirmText" style="margin-bottom: 20px;">Are you sure?</p>
    <button id="confirmYes" style="margin-right:10px; padding:8px 16px;">Yes</button>
    <button id="confirmNo" style="padding:8px 16px;">No</button>
  </div>
</div>

<!-- Place this AFTER the confirmModal HTML block -->
<script>
  let deleteIndex = null;
  const confirmModal = document.getElementById('confirmModal');
  const confirmYes = document.getElementById('confirmYes');
  const confirmNo = document.getElementById('confirmNo');
  const confirmText = document.getElementById('confirmText');

  confirmYes.onclick = () => {
    if (deleteIndex !== null) {
      moodEntries.splice(deleteIndex, 1);
      localStorage.setItem('moodEntries', JSON.stringify(moodEntries));
      renderEntries();
      deleteIndex = null;
    }
    confirmModal.style.display = 'none';
    document.body.style.overflow = '';
  };

  confirmNo.onclick = () => {
    confirmModal.style.display = 'none';
    document.body.style.overflow = '';
    deleteIndex = null;
  };
</script>




</body>
</html>
